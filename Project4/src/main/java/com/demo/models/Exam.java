package com.demo.models;
// Generated Dec 21, 2022, 2:06:16 PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Exam generated by hbm2java
 */
@Entity
@Table(name = "exam", catalog = "project4")
public class Exam implements java.io.Serializable {

	private Integer examId;
	private Grade grade;
	private Subject subject;
	private String name;
	private Date created;
	private int time;
	private int easy;
	private int medium;
	private int hard;
	private boolean status;
	private Set<Result> results = new HashSet<Result>(0);
	private Set<Question> questions = new HashSet<Question>(0);

	public Exam() {
	}

	public Exam(Grade grade, Subject subject, String name, Date created, int time, int easy, int medium, int hard,
			boolean status) {
		this.grade = grade;
		this.subject = subject;
		this.name = name;
		this.created = created;
		this.time = time;
		this.easy = easy;
		this.medium = medium;
		this.hard = hard;
		this.status = status;
	}

	public Exam(Grade grade, Subject subject, String name, Date created, int time, int easy, int medium, int hard,
			boolean status, Set<Result> results, Set<Question> questions) {
		this.grade = grade;
		this.subject = subject;
		this.name = name;
		this.created = created;
		this.time = time;
		this.easy = easy;
		this.medium = medium;
		this.hard = hard;
		this.status = status;
		this.results = results;
		this.questions = questions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "exam_id", unique = true, nullable = false)
	public Integer getExamId() {
		return this.examId;
	}

	public void setExamId(Integer examId) {
		this.examId = examId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "grade_id", nullable = false)
	public Grade getGrade() {
		return this.grade;
	}

	public void setGrade(Grade grade) {
		this.grade = grade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "subject_id", nullable = false)
	public Subject getSubject() {
		return this.subject;
	}

	public void setSubject(Subject subject) {
		this.subject = subject;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", nullable = false, length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "time", nullable = false)
	public int getTime() {
		return this.time;
	}

	public void setTime(int time) {
		this.time = time;
	}

	@Column(name = "easy", nullable = false)
	public int getEasy() {
		return this.easy;
	}

	public void setEasy(int easy) {
		this.easy = easy;
	}

	@Column(name = "medium", nullable = false)
	public int getMedium() {
		return this.medium;
	}

	public void setMedium(int medium) {
		this.medium = medium;
	}

	@Column(name = "hard", nullable = false)
	public int getHard() {
		return this.hard;
	}

	public void setHard(int hard) {
		this.hard = hard;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "exam")
	public Set<Result> getResults() {
		return this.results;
	}

	public void setResults(Set<Result> results) {
		this.results = results;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "question_exam", catalog = "project4", joinColumns = {
			@JoinColumn(name = "exam_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "question_id", nullable = false, updatable = false) })
	public Set<Question> getQuestions() {
		return this.questions;
	}

	public void setQuestions(Set<Question> questions) {
		this.questions = questions;
	}

}
